services:
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    env_file:
      - env/auth.env
    restart: unless-stopped

  ollama:
    deploy: &gpu-deploy
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    env_file:
      - env/ollama.env
    image: ollama/ollama:latest
    ports:
      - 11434:11434
    restart: unless-stopped
    volumes:
      - ./data/ollama:/root/.ollama

  db:
    env_file:
      - env/db.env
    image: pgvector/pgvector:pg15
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  redis:
    env_file:
      - env/redis.env
    image: redis/redis-stack:latest
    volumes:
      - ./data/redis:/data

  openwebui:
    depends_on:
      - db
      - edgetts
      - ollama
      - searxng
    deploy: *gpu-deploy
    env_file:
      - env/openwebui.env
    image: ghcr.io/open-webui/open-webui:cuda
    restart: unless-stopped
    volumes:
      - ./data/openwebui:/app/backend/data

  pipelines:
    extra_hosts:
      - host.docker.internal:host-gateway
    image: ghcr.io/open-webui/pipelines:main
    restart: unless-stopped
    volumes:
      - ./data/pipelines:/app/pipelines

  edgetts:
    deploy: *gpu-deploy
    env_file:
      - env/edgetts.env
    image: travisvn/openai-edge-tts:latest
    ports:
      - 5050:5050

  searxng:
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    cap_drop:
      - ALL
    env_file:
      - env/searxng.env
    depends_on:
      - redis
    image: searxng/searxng:latest
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    restart: unless-stopped
    volumes:
      - ./data/searxng/settings.yml:/etc/searxng/settings.yml:rw
      - ./data/searxng/uwsgi.ini:/etc/searxng/uwsgi.ini:rw

  nginx:
    depends_on:
      - auth
      - certbot
      - openwebui
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - ./conf/nginx/default.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  watchtower:
    command: --cleanup --debug --interval 300
    depends_on:
      - openwebui
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # OPTIONAL SETUP
  #
  # ** local speech synthesis: only us/uk english (currently)
  # kokoro:
  #   deploy: *gpu-deploy
  #   image: ghcr.io/remsky/kokoro-fastapi-gpu:latest
  #   ports:
  #     - 8880:8880

  # ** node based image generation
  # comfyui:
  #   deploy: *gpu-deploy
  #   image: yanwk/comfyui-boot:cu124-slim
  #   ports:
  #     - 8188:8188
  #   volumes:
  #     - ./data/comfyui:/root
